{"ast":null,"code":"export var formatDate=function formatDate(dateString){var options={year:\"numeric\",month:\"long\",day:\"numeric\"};var date=new Date(dateString);var formattedDate=date.toLocaleDateString(\"en-US\",options);var hour=date.getHours();var minutes=date.getMinutes();var period=hour>=12?\"PM\":\"AM\";var formattedTime=\"\".concat(hour%12,\":\").concat(minutes.toString().padStart(2,\"0\"),\" \").concat(period);return\"\".concat(formattedDate,\" | \").concat(formattedTime);};","map":{"version":3,"names":["formatDate","dateString","options","year","month","day","date","Date","formattedDate","toLocaleDateString","hour","getHours","minutes","getMinutes","period","formattedTime","concat","toString","padStart"],"sources":["C:/Users/Farhan/Desktop/WebDevelopment/Projects/Learnify/src/services/formatDate.js"],"sourcesContent":["export const formatDate = (dateString) => {\n    const options = { year: \"numeric\", month: \"long\", day: \"numeric\" }\n    const date = new Date(dateString)\n    const formattedDate = date.toLocaleDateString(\"en-US\", options)\n  \n    const hour = date.getHours()\n    const minutes = date.getMinutes()\n    const period = hour >= 12 ? \"PM\" : \"AM\"\n    const formattedTime = `${hour % 12}:${minutes\n      .toString()\n      .padStart(2, \"0\")} ${period}`\n  \n    return `${formattedDate} | ${formattedTime}`\n  }"],"mappings":"AAAA,MAAO,IAAM,CAAAA,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAIC,UAAU,CAAK,CACtC,GAAM,CAAAC,OAAO,CAAG,CAAEC,IAAI,CAAE,SAAS,CAAEC,KAAK,CAAE,MAAM,CAAEC,GAAG,CAAE,SAAU,CAAC,CAClE,GAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACN,UAAU,CAAC,CACjC,GAAM,CAAAO,aAAa,CAAGF,IAAI,CAACG,kBAAkB,CAAC,OAAO,CAAEP,OAAO,CAAC,CAE/D,GAAM,CAAAQ,IAAI,CAAGJ,IAAI,CAACK,QAAQ,EAAE,CAC5B,GAAM,CAAAC,OAAO,CAAGN,IAAI,CAACO,UAAU,EAAE,CACjC,GAAM,CAAAC,MAAM,CAAGJ,IAAI,EAAI,EAAE,CAAG,IAAI,CAAG,IAAI,CACvC,GAAM,CAAAK,aAAa,IAAAC,MAAA,CAAMN,IAAI,CAAG,EAAE,MAAAM,MAAA,CAAIJ,OAAO,CAC1CK,QAAQ,EAAE,CACVC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,MAAAF,MAAA,CAAIF,MAAM,CAAE,CAE/B,SAAAE,MAAA,CAAUR,aAAa,QAAAQ,MAAA,CAAMD,aAAa,EAC5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}